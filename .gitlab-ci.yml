---

stages:
 - rootfs
 - conffs
 - initramfs
 - version-control

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE != "web" && $CI_PIPELINE_SOURCE != "trigger"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "web" || $CI_PIPELINE_SOURCE == "trigger"'
      when: always

.common_stage: &common_stage
  image: "#FIXME use Dockerfile.ci to build vauban builder"
  before_script:
    - echo $DOT_SECRETS_ENV | base64 -d > .secrets.env
  script:
    - python3 vauban.py
  after_script:
    - rm -rf .secrets.env

rootfs:
  stage: rootfs
  <<: *common_stage
  rules:
    - if: $rootfs == "yes"
      when: on_success

conffs:
  stage: conffs
  <<: *common_stage
  rules:
    - if: $conffs == "yes"
      when: on_success

initramfs:
  stage: initramfs
  <<: *common_stage
  rules:
    - if: $initramfs == "yes"
      when: on_success

version-control:
  stage: version-control
  <<: *common_stage
  script:
    - ./version-control.sh -t "$docker_tag" -i "$docker_image" -m "$master"
  rules:
    - if: $vc == "yes"
      when: on_success

variables:
  name:
    value: "debian-11-generic-amd64.raw"
    description: "The name of the master to build. Build definition must be provided in config.yml"
  branch:
    value: "ansible-branch-name-here"
    description: "The name of the ansible branch to apply"
  rootfs:
    value: "yes"
    description: "Build the rootfs"
  conffs:
    value: "yes"
    description: "Build the conffs"
  initramfs:
    value: "yes"
    description: "Build the initramfs and kernel"
